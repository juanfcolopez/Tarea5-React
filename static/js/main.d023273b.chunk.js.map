{"version":3,"sources":["redux/selectors.js","components/StockOrderBook.js","components/StockInfo.js","components/TradeChart.js","services/ExchangeService.js","redux/actions.js","redux/actionTypes.js","components/Stock.js","data/markets.js","components/StockList.js","App.js","serviceWorker.js","redux/reducers/stockShowing.js","redux/reducers/candles.js","redux/reducers/information.js","redux/reducers/trades.js","redux/reducers/orderbook.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["getStockShowing","store","stockShowing","StockOrderBook","asks","this","props","slice","bids","asksTotalSize","bidsTotalSize","map","o","i","parseFloat","size","price","Row","Col","xs","md","lg","className","key","Math","round","style","width","React","Component","connect","state","orderbook","getOrderBook","StockInfo","console","log","transactions","UNIX_timestamp","a","Date","hour","getHours","min","getMinutes","sec","getSeconds","strPad","n","String","info","volume","high","low","last","variation","trades","side","timeConverter","time","amount","stockInfo","getStockInfo","getTrades","TradeChart","chart","lineSeries","chartTooltip","createRef","nextProps","data","setData","timeScale","applyOptions","fixLeftEdge","crosshair","labelVisible","visible","timeVisible","createChart","document","getElementById","height","localization","locale","dateFormat","timeFormatter","timestamp","priceScale","scaleMargins","top","bottom","borderVisible","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","addCandlestickSeries","window","addEventListener","event","resize","clientWidth","tooltip","subscribeCrosshairMove","param","point","x","y","display","dateStr","datetimeConverter","candle","seriesPrices","get","innerHTML","open","close","left","year","getFullYear","month","getMonth","date","getDate","id","ref","candles","getCandles","ExchangeService","setState","start","changeStock","stock_ticker","restart","ticker","setTrades","connectTradesWebsocket","connectTickerWebsocket","connectCandleWebsocket","connectOrderBookWebsocket","tradeStream","infoStream","klineStream","orderbookStream","stop","fetch","then","res","json","setCandles","catch","lastUpdateId","setOrderBook","WebSocket","toLowerCase","onmessage","evt","JSON","parse","trade","E","q","p","m","addTrade","v","c","h","l","setStockInfo","k","t","addCandle","orderbookUpdate","u","U","b","updateOrderBook","type","payload","Stock","BTCUSDT","base","quote","ETHUSDT","BNBUSDT","ADAUSDT","BUSDUSDT","XRPUSDT","BCHUSDT","ETCUSDT","EOSUSDT","LTCUSDT","DASHUSDT","XMRUSDT","StockList","handleClickStock","bind","target","getAttribute","setStock","marketsDict","markets","Object","values","onClick","stockId","stock","App","Container","Boolean","location","hostname","match","action","initialState","combineReducers","length","orderbookAsks","reduce","orderbookBids","askOrder","bidOrder","entries","createStore","rootReducer","rootElement","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d023273b.chunk.js","sourcesContent":["export const getCandles = store => store.candles;\n\nexport const getTrades = store => store.trades;\n\nexport const getStockShowing = store => store.stockShowing;\n\nexport const getStockInfo = store => store.stockInfo;\n\nexport const getOrderBook = store => store.orderbook;\n","import React from 'react';\nimport '../css/StockOrderBook.css';\nimport { Row, Col } from 'reactstrap';\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { getOrderBook } from \"../redux/selectors\";\n\nclass StockOrderBook extends React.Component {\n\n  render() {\n    let asks = this.props.asks.slice(0, 15);\n    let bids = this.props.bids.slice(0, 15);\n\n    let asksTotalSize = 0;\n    let bidsTotalSize = 0;\n\n    asks = asks.map((o,i) => {\n      asksTotalSize = asksTotalSize + parseFloat(o.size);\n      return({price: o.price, size: asksTotalSize})\n    });\n\n    bids = bids.map((o,i) => {\n      bidsTotalSize = bidsTotalSize + parseFloat(o.size);\n      return({price: o.price, size: bidsTotalSize})\n    });\n\n    return (\n      <Row>\n        <Col xs=\"12\" md=\"12\" lg=\"12\">\n        <div className=\"StockOrderBookTitle\">\n          <h3>Orderbook</h3>\n        </div>\n        <div className=\"StockOrderBook\">\n          <table className=\"StockOrderBookBids\">\n            <thead>\n              <tr>\n                <th>Size</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            { bids.map((o, i) => {\n                return (<tr key={i} className=\"askRow\">\n                  <td>{Math.round(o.size * 100) / 100}</td>\n                  <td>{Math.round(o.price * 100) / 100}<div className=\"bg\" style={{width: (o.size/bidsTotalSize)*80 + \"%\"}}/></td>\n                </tr>)\n              })\n            }\n            </tbody>\n          </table>\n          <table className=\"StockOrderBookAsks\">\n            <thead>\n              <tr>\n                <th>Price</th>\n                <th>Size</th>\n              </tr>\n            </thead>\n            <tbody>\n            { asks.map((o, i) => {\n                return (<tr key={i} className=\"bidRow\">\n                  <td>{Math.round(o.price * 100) / 100}<div className=\"bg\" style={{width: (o.size/asksTotalSize)*80 + \"%\"}}/></td>\n                  <td>{Math.round(o.size * 100) / 100}</td>\n                </tr>)\n              })\n            }\n            </tbody>\n          </table>\n        </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const orderbook = getOrderBook(state);\n  return { asks: orderbook.asks,\n           bids: orderbook.bids};\n};\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(StockOrderBook);\n","import React from 'react';\nimport '../css/StockInfo.css';\nimport { Row, Col } from 'reactstrap';\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { getTrades, getStockInfo } from \"../redux/selectors\";\n\nclass StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.transactions = [];\n  }\n\n  // https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n  timeConverter(UNIX_timestamp){\n    const a = new Date(UNIX_timestamp);\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    const time = this.strPad(hour) + ':' + this.strPad(min) + ':' + this.strPad(sec) ;\n    return time;\n  }\n\n  strPad(n) {\n    return String(\"00\" + n).slice(-2);\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col xs=\"12\" md=\"12\" lg=\"6\">\n          <div className=\"StockData\">\n            <table>\n              <tbody>\n              <tr>\n                <th>Volume 24hs:</th>\n                <td>{this.props.info.volume}</td>\n              </tr>\n              <tr>\n                <th>High 24hs:</th>\n                <td>{this.props.info.high}</td>\n              </tr>\n              <tr>\n                <th>Low 24hs:</th>\n                <td>{this.props.info.low}</td>\n              </tr>\n              <tr>\n                <th>Last Price:</th>\n                <td>{this.props.info.last}</td>\n              </tr>\n              <tr>\n                <th>Variation 24hs:</th>\n                <td>{this.props.info.variation}%</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </Col>\n        <Col xs=\"12\" md=\"12\" lg=\"6\">\n        <div className=\"StockTradesData\">\n          {<table>\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Amount</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            { this.props.trades.map((o, i) => {\n                if (o.side === \"buy\") {\n                  return (\n                    <tr key={i} className=\"buyOrder\">\n                      <td>{this.timeConverter(o.time)}</td>\n                      <td>{o.amount}</td>\n                      <td>{Math.round(o.price*100)/100}</td>\n                    </tr>\n                  );\n                } else {\n                  return (\n                    <tr key={i} className=\"sellOrder\">\n                      <td>{this.timeConverter(o.time)}</td>\n                      <td>{o.amount}</td>\n                      <td>{Math.round(o.price*100)/100}</td>\n                    </tr>\n                  );\n                }\n              })\n            }\n            </tbody>\n\n          </table>\n        }</div>\n        </Col>\n      </Row>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const info = getStockInfo(state);\n  const trades = getTrades(state);\n  return { info: info,\n           trades: trades};\n};\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(StockInfo);\n","import React from 'react';\nimport '../css/TradeChart.css';\nimport { createChart } from 'lightweight-charts';\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { getCandles } from \"../redux/selectors\";\n\n\nclass TradeChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n    this.lineSeries = null;\n\n    this.chartTooltip = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    console.log(nextProps.data);\n    this.lineSeries.setData(nextProps.data);\n    this.chart.timeScale().applyOptions({ fixLeftEdge: true,\n                                          crosshair: {\n                                            labelVisible: false,\n                                            visible: false,\n                                          },\n                                          timeScale: {\n                                            timeVisible: true,\n                                            visible: false\n                                          },\n                                        });\n    return false;\n  }\n\n  componentDidMount() {\n    // Generate chart\n    this.chart = createChart(document.getElementById(\"TradeChart\"),\n                              { width: 600,\n                                height: 350,\n                                fixLeftEdge: true,\n                                crosshair: {\n                                  labelVisible: false,\n                                  visible: false,\n                                },\n                                localization: {\n                                  locale: 'es-CL',\n                                  dateFormat: 'dd/mm/yyyy',\n                                  timeFormatter: function(timestamp) {\n                                    const a = new Date(timestamp*1000);\n                                    const hour = a.getHours();\n                                    const min = a.getMinutes();\n                                    const sec = a.getSeconds();\n                                    const time = String(\"00\" + hour).slice(-2) + ':' + String(\"00\" + min).slice(-2) + ':' + String(\"00\" + sec).slice(-2) ;\n                                    return time;\n                                  },\n                                },\n                              \tpriceScale: {\n                              \t\tscaleMargins: {\n                              \t\t\ttop: 0.3,\n                              \t\t\tbottom: 0.25,\n                              \t\t},\n                              \t\tborderVisible: false,\n                              \t},\n                              \tlayout: {\n                              \t\tbackgroundColor: '#131722',\n                              \t\ttextColor: '#d1d4dc',\n                              \t},\n                              \tgrid: {\n                              \t\tvertLines: {\n                              \t\t\tcolor: 'rgba(42, 46, 57, 0)',\n                              \t\t},\n                              \t\thorzLines: {\n                              \t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n                              \t\t},\n                              \t},\n                                timeScale: {\n                                  timeVisible: true,\n                                  visible: false,\n                                },\n    });\n\n    this.lineSeries = this.chart.addCandlestickSeries();\n    this.chart.timeScale().applyOptions({ fixLeftEdge: true,\n                                          crosshair: {\n                                            labelVisible: false,\n                                            visible: false,\n                                          },\n                                          timeScale: {\n                                            timeVisible: true,\n                                            visible: false\n                                          },\n                                        });\n\n    window.addEventListener('resize', (event) => {\n      this.chart.resize(document.getElementById(\"TradeChart\").clientWidth, 350);\n    });\n\n    this.chart.resize(document.getElementById(\"TradeChart\").clientWidth, 350);\n\n    const toolTipWidth = 120;\n    const toolTipHeight = 100;\n    const toolTipMargin = 15;\n    const width = 600;\n    const height = 300;\n\n    let tooltip = document.getElementById(\"TradeChartTooltip\");\n    // update tooltip\n    this.chart.subscribeCrosshairMove((param) => {\n    \tif (!param.time || param.point.x < 0 || param.point.x > width || param.point.y < 0 || param.point.y > height) {\n    \t\ttooltip.style.display = 'none';\n    \t\treturn;\n    \t}\n\n    \tvar dateStr = this.datetimeConverter(param.time*1000);\n\n    \ttooltip.style.display = 'block';\n    \tvar candle = param.seriesPrices.get(this.lineSeries);\n\n    \ttooltip.innerHTML = '<div style=\"font-size: 8px; margin: 4px 0px\"> o: '+Math.round(candle.open)+' - h: '+Math.round(candle.high)+' - l: '+Math.round(candle.low)+' - c: '+Math.round(candle.close)+'</div>' +\n    \t\t'<div>' + dateStr + '</div>';\n\n    \tvar y = param.point.y;\n\n    \tvar left = param.point.x + toolTipMargin;\n    \tif (left > width - toolTipWidth) {\n    \t\tleft = param.point.x - toolTipMargin - toolTipWidth;\n    \t}\n\n    \tvar top = y + toolTipMargin;\n    \tif (top > height - toolTipHeight) {\n    \t\ttop = y - toolTipHeight - toolTipMargin;\n    \t}\n\n    \ttooltip.style.left = left + 'px';\n    \ttooltip.style.top = top + 'px';\n    });\n  }\n\n  // https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n  datetimeConverter(UNIX_timestamp){\n    const a = new Date(UNIX_timestamp);\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    const year = a.getFullYear();\n    const month = months[a.getMonth()];\n    const date = a.getDate();\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    const datetime = date + ' ' + month + ' ' + year + ' ' + this.strPad(hour) + ':' + this.strPad(min) + ':' + this.strPad(sec) ;\n    return datetime;\n  }\n\n  strPad(n) {\n    return String(\"00\" + n).slice(-2);\n  }\n\n  render() {\n    return (\n      <div id=\"TradeChart\">\n        <div ref={this.chartTooltip} id=\"TradeChartTooltip\" className=\"floating-tooltip-2\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const candles = getCandles(state);\n  return { data: candles };\n};\n\nexport default connect(\n  mapStateToProps,\n  { }\n)(TradeChart);\n","import React from 'react';\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { addCandle, setCandles, addTrade, setStockInfo, setOrderBook, updateOrderBook, setTrades } from \"../redux/actions\";\nimport { getStockShowing } from \"../redux/selectors\";\n\nclass ExchangeService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockShowing: \"\",\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ stockShowing: this.props.stockShowing.id });\n    this.start(this.props.stockShowing.id);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (this.state.stockShowing != nextProps.stockShowing.id){\n      this.changeStock(nextProps.stockShowing.id);\n    }\n    return false;\n  }\n\n  changeStock(stock_ticker) {\n    this.setState({ stockShowing: stock_ticker });\n    this.restart(stock_ticker);\n  }\n\n  start(ticker) {\n    // Get past data from ticker && reset data\n    this.getCandles(ticker);\n    this.getOrderBook(ticker);\n    this.props.setTrades([]);\n\n    // Connect to ticker websocket updates\n    this.connectTradesWebsocket(ticker);\n    this.connectTickerWebsocket(ticker);\n    this.connectCandleWebsocket(ticker);\n    this.connectOrderBookWebsocket(ticker);\n  }\n\n  stop() {\n    // Close sockets\n    if (this.tradeStream)  this.tradeStream.close();\n    if (this.infoStream)  this.infoStream.close();\n    if (this.klineStream)  this.klineStream.close();\n    if (this.orderbookStream)  this.orderbookStream.close();\n  }\n\n  restart(ticker) {\n    this.stop();\n    this.start(ticker);\n  }\n\n  getCandles(ticker) {\n    // Get previous chart data\n    fetch(\"https://api.binance.com/api/v3/klines?symbol=\"+ticker+\"&interval=1h\")\n        .then(res => res.json())\n        .then((data) => {\n          const candles = data.map((o,i) => { return({  time: o[0],\n                                                        open: o[1],\n                                                        high: o[2],\n                                                        low: o[3],\n                                                        close: o[4] });\n          });\n          this.props.setCandles(candles);\n        })\n        .catch(console.log);\n  }\n\n  getOrderBook(ticker) {\n    // Get previous chart data\n    fetch(\"https://www.binance.com/api/v3/depth?symbol=\"+ticker+\"&limit=1000\")\n        .then(res => res.json())\n        .then((data) => {\n          let orderbook = { lastUpdateId: data.lastUpdateId }\n          orderbook.asks = data.asks.map((o,i) => { return({  price: o[0],\n                                                              size: o[1] });\n          });\n          orderbook.bids = data.bids.map((o,i) => { return({  price: o[0],\n                                                              size: o[1] });\n          });\n\n          this.props.setOrderBook(orderbook);\n        })\n        .catch(console.log);\n  }\n\n  connectTradesWebsocket(ticker) {\n    this.tradeStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+ticker.toLowerCase()+\"@aggTrade\");\n\n    this.tradeStream.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n\n      const trade =  {  time: data.E,\n                        amount: data.q,\n                        price: data.p,\n                        side: data.m ? \"buy\" : \"sell\"\n                     }\n\n      this.props.addTrade(trade);\n    };\n  }\n\n  connectTickerWebsocket(ticker) {\n    this.infoStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+ticker.toLowerCase()+\"@ticker\");\n\n    this.infoStream.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n\n      const info = {\n        volume: Math.round(data.v*100)/100,\n        variation: Math.round((data.c - data.o)/data.o*10000)/100,\n        high: Math.round(data.h*100)/100,\n        low: Math.round(data.l*100)/100,\n        last: Math.round(data.c*100)/100\n      };\n\n      this.props.setStockInfo(info);\n    };\n  }\n\n  connectCandleWebsocket(ticker) {\n    this.klineStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+ticker.toLowerCase()+\"@kline_1h\");\n\n    this.klineStream.onmessage = (evt) =>  {\n      const data = JSON.parse(evt.data);\n\n      const candle = {  time: data.k.t,\n                        open: data.k.o,\n                        high: data.k.h,\n                        low: data.k.l,\n                        close: data.k.c\n                     }\n\n       this.props.addCandle(candle);\n    };\n  }\n\n  connectOrderBookWebsocket(ticker) {\n    this.orderbookStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+ticker.toLowerCase()+\"@depth\");\n\n    this.orderbookStream.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n\n      const orderbookUpdate =  {  u: data.u,\n                                  U: data.U,\n                                  asks: data.a,\n                                  bids: data.b\n      }\n\n      this.props.updateOrderBook(orderbookUpdate);\n    };\n  }\n\n  render(){\n    return (null);\n  }\n}\n\nconst mapStateToProps = state => {\n  const stockShowing = getStockShowing(state);\n  return { stockShowing: stockShowing };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setCandles, addCandle, addTrade, setStockInfo, setOrderBook, updateOrderBook, setTrades }\n)(ExchangeService);\n","import { ADD_TRADE, SET_STOCK, ADD_CANDLE, SET_CANDLES, SET_INFO, SET_ORDERBOOK, UPDATE_ORDERBOOK, SET_TRADES } from \"./actionTypes\";\n\nexport const setTrades = trades => ({\n  type: SET_TRADES,\n  payload: {\n    trades: trades\n  }\n});\n\nexport const addTrade = trade => ({\n  type: ADD_TRADE,\n  payload: {\n    trade: trade\n  }\n});\n\nexport const setStock = stock => ({\n  type: SET_STOCK,\n  payload: {\n    stock: stock\n  }\n});\n\nexport const setCandles = candles => ({\n  type: SET_CANDLES,\n  payload: {\n    candles\n  }\n});\n\nexport const addCandle = candle => ({\n  type: ADD_CANDLE,\n  payload: {\n    candle: candle\n  }\n});\n\nexport const setStockInfo = info => ({\n  type: SET_INFO,\n  payload: {\n    info: info\n  }\n});\n\nexport const setOrderBook = orderbook => ({\n  type: SET_ORDERBOOK,\n  payload: {\n    orderbook: orderbook\n  }\n});\n\nexport const updateOrderBook = orderbook => ({\n  type: UPDATE_ORDERBOOK,\n  payload: {\n    orderbook: orderbook\n  }\n});\n","export const SET_STOCK = \"SET_STOCK\";\nexport const SET_INFO = \"SET_STOCK_INFO\";\nexport const ADD_TRADE = \"ADD_TRADE\";\nexport const SET_TRADES = \"SET_TRADES\";\nexport const ADD_CANDLE = \"ADD_CANDLE\";\nexport const SET_CANDLES = \"SET_CANDLES\";\nexport const SET_ORDERBOOK = \"SET_ORDERBOOK\";\nexport const UPDATE_ORDERBOOK = \"UPDATE_ORDERBOOK\";\n","import React from 'react';\n\n// Components\nimport StockOrderBook from './StockOrderBook';\nimport StockInfo from './StockInfo';\nimport TradeChart from './TradeChart';\n\n// Services\nimport ExchangeService from '../services/ExchangeService'\n\nclass Stock extends React.Component {\n\n  render() {\n    return (\n      <div className=\"Stock\">\n        <ExchangeService />\n        <TradeChart />\n        <StockInfo />\n        <StockOrderBook />\n      </div>\n    );\n  }\n}\n\nexport default Stock;\n","export default\n{\n  BTCUSDT: {\n    id: \"BTCUSDT\",\n    base: \"BTC\",\n    quote: \"USDT\",\n  },\n  ETHUSDT: {\n    id: \"ETHUSDT\",\n    base: \"ETH\",\n    quote: \"USDT\",\n  },\n  BNBUSDT: {\n    id: \"BNBUSDT\",\n    base: \"BNB\",\n    quote: \"USDT\",\n  },\n  ADAUSDT: {\n    id: \"ADAUSDT\",\n    base: \"ADA\",\n    quote: \"USDT\",\n  },\n  BUSDUSDT: {\n    id: \"BUSDUSDT\",\n    base: \"BUSD\",\n    quote: \"USDT\",\n  },\n  XRPUSDT: {\n    id: \"XRPUSDT\",\n    base: \"XRP\",\n    quote: \"USDT\",\n  },\n  BCHUSDT: {\n    id: \"BCHUSDT\",\n    base: \"BCH\",\n    quote: \"USDT\",\n  },\n  ETCUSDT: {\n    id: \"ETCUSDT\",\n    base: \"ETC\",\n    quote: \"USDT\",\n  },\n  EOSUSDT: {\n    id: \"EOSUSDT\",\n    base: \"EOS\",\n    quote: \"USDT\",\n  },\n  LTCUSDT: {\n    id: \"LTCUSDT\",\n    base: \"XRP\",\n    quote: \"USDT\",\n  },\n  DASHUSDT: {\n    id: \"DASHUSDT\",\n    base: \"DASH\",\n    quote: \"USDT\",\n  },\n  XMRUSDT: {\n    id: \"XMRUSDT\",\n    base: \"XMR\",\n    quote: \"USDT\",\n  }\n}\n","import React from 'react';\n\nimport '../css/StockList.css';\nimport { connect } from \"react-redux\";\nimport { setStock } from \"../redux/actions\";\n\nimport marketsDict from '../data/markets';\n\nclass StockList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockShowing: \"\",\n    }\n    this.handleClickStock = this.handleClickStock.bind(this);\n  }\n\n  handleClickStock(event) {\n    this.setState({ stockShowing: event.target.getAttribute(\"stockId\") });\n    console.log(this.state.stockShowing);\n    this.props.setStock(marketsDict[event.target.getAttribute(\"stockId\")]);\n  }\n\n  render() {\n    const markets = Object.values(marketsDict);\n    return (\n      <div className=\"StockList\">\n        <ul>\n        { markets.map((o, i) =>\n            <li key={i}\n                onClick={this.handleClickStock}\n                stockId={o.id}\n                className={this.state.stockShowing === o.id? \"selected\":\"unselected\"}>\n              {o.id}\n            </li>\n          )\n        }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setStock }\n)(StockList);\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport './css/App.css';\n\n// Components\nimport { Container, Row, Col } from 'reactstrap';\nimport Stock  from './components/Stock';\nimport StockList  from './components/StockList';\nimport { getStockShowing } from \"./redux/selectors\";\n//import ClipLoader from \"react-spinners/ClipLoader\";\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Container>\n            <Row>\n              <Col xs=\"12\" md=\"12\" lg=\"3\">\n                <StockList />\n              </Col>\n              <Col xs=\"12\" md=\"12\" lg=\"9\">\n                { (this.props.stockShowing) ?\n                <Stock />\n              :\n                <h4 style={{width:\"100%\"}}>Select a stock...</h4>\n              }\n              </Col>\n            </Row>\n\n          </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const stockShowing = getStockShowing(state);\n  return { stockShowing };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_STOCK } from \"../actionTypes\";\n\nconst initialState = \"\";\n\nconst stockShowing = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_STOCK: {\n      return action.payload.stock;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default stockShowing;\n","import { ADD_CANDLE, SET_CANDLES } from \"../actionTypes\";\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CANDLE: {\n      const { candle } = action.payload;\n      if (state.length > 0 && state[state.length-1].time === candle.time){\n        return [...state.slice(0, -1), candle];\n      }  else {\n        return [...state, candle];\n      }\n    }\n    case SET_CANDLES: {\n      const { candles } = action.payload;\n      return candles;\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_INFO } from \"../actionTypes\";\n\nconst initialState = {\n  volume: \"\",\n  variation: \"\",\n  high: \"\",\n  low: \"\",\n  last: \"\"\n};\n\nconst stockInfo = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INFO: {\n      return action.payload.info;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default stockInfo;\n","import { ADD_TRADE, SET_TRADES } from \"../actionTypes\";\n\nconst initialState = [];\n\nconst trades = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TRADES: {\n      const { trades } = action.payload;\n      return trades;\n    }\n    case ADD_TRADE: {\n      const { trade } = action.payload;\n      return [trade, ...state.slice(0,20)];\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default trades;\n","import { UPDATE_ORDERBOOK, SET_ORDERBOOK } from \"../actionTypes\";\n\nconst initialState = {\n  lastUpdateId: 0,\n  bids: [],\n  asks: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_ORDERBOOK: {\n      let orderbook = state;\n      let orderbookAsks = orderbook.asks.reduce((o, i) => (o[i.price] = i.size, o), {});\n      let orderbookBids = orderbook.bids.reduce((o, i) => (o[i.price] = i.size, o), {});\n\n      let orderbookUpdate = action.payload.orderbook;\n\n      if (orderbookUpdate.u <= orderbook.lastUpdateId){\n        return orderbook;\n      } else {\n        for (let i=0; i < orderbookUpdate.asks.length; i++) {\n          let askOrder = orderbookUpdate.asks[i];\n          if (askOrder[0] in orderbookAsks) {\n            if (askOrder[1] === 0){\n              delete orderbookAsks[askOrder[0]];\n            } else {\n              orderbookAsks[askOrder[0]] = askOrder[1];\n            }\n          }\n        }\n        for (let i=0; i < orderbookUpdate.bids.length; i++) {\n          let bidOrder = orderbookUpdate.bids[i];\n          if (bidOrder[0] in orderbookBids) {\n            if (bidOrder[1] === 0){\n              delete orderbookBids[bidOrder[0]];\n            } else {\n              orderbookBids[bidOrder[0]] = bidOrder[1];\n            }\n          }\n        }\n\n        orderbook.asks = Object.entries(orderbookAsks).map(([price, size]) => ({price,size}));\n        orderbook.bids = Object.entries(orderbookBids).map(([price, size]) => ({price,size}));\n\n        return orderbook;\n      }\n    }\n    case SET_ORDERBOOK: {\n      const { orderbook } = action.payload;\n      return orderbook;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport stockShowing from \"./stockShowing\";\nimport candles from \"./candles\";\nimport stockInfo from \"./information\";\nimport trades from \"./trades\";\nimport orderbook from \"./orderbook\";\n\nexport default combineReducers({ candles, stockShowing, stockInfo, trades, orderbook });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}