{"version":3,"sources":["components/StockOrderBook.js","components/StockInfo.js","components/TradeChart.js","components/Stock.js","components/StockList.js","data/markets.js","App.js","serviceWorker.js","index.js"],"names":["StockOrderBook","asks","this","props","bids","asksTotalSize","bidsTotalSize","map","o","i","parseFloat","size","price","Row","Col","xs","md","lg","className","key","Math","round","style","width","React","Component","StockInfo","transactions","UNIX_timestamp","a","Date","hour","getHours","min","getMinutes","sec","getSeconds","strPad","n","String","slice","trades","info","volume","high","low","last","variation","side","timeConverter","time","amount","parseInt","TradeChart","chart","lineSeries","chartTooltip","createRef","next_props","setData","data","createChart","document","getElementById","height","fixLeftEdge","crosshair","labelVisible","visible","localization","locale","dateFormat","timeFormatter","timestamp","priceScale","scaleMargins","top","bottom","borderVisible","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","timeScale","timeVisible","addCandlestickSeries","applyOptions","window","addEventListener","event","resize","clientWidth","tooltip","subscribeCrosshairMove","param","point","x","y","display","dateStr","datetimeConverter","candle","seriesPrices","get","innerHTML","open","close","left","year","getFullYear","month","getMonth","date","getDate","id","ref","ccxws","require","Stock","state","orderbookAsks","orderbookBids","lastPrice","candles","startGettingData","market","fetch","then","res","json","setState","connectSocket","catch","console","log","newMarket","disconnectSockets","klineStream","tradeStream","infoStream","WebSocket","toLowerCase","socket2","binance","on","snapshot","subscribeLevel2Snapshots","onmessage","evt","JSON","parse","k","t","h","l","c","length","trade","E","q","p","m","v","nextProps","nextState","changeStock","StockList","markets","onClick","clickAction","stockId","BTCUSDT","base","quote","ETHUSDT","BNBUSDT","ADAUSDT","BUSDUSDT","XRPUSDT","BCHUSDT","ETCUSDT","EOSUSDT","LTCUSDT","DASHUSDT","XMRUSDT","App","stockShowing","target","getAttribute","stock_id","updateStock","marketsList","Object","values","Container","onStockClick","bind","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.640816d5.chunk.js","sourcesContent":["import React from 'react';\nimport './StockOrderBook.css';\nimport { Row, Col } from 'reactstrap';\n\nexport class StockOrderBook extends React.Component {\n\n  render() {\n    let asks = this.props.asks;\n    let bids = this.props.bids;\n\n    let asksTotalSize = 0;\n    let bidsTotalSize = 0;\n\n    asks = asks.map((o,i) => {\n      asksTotalSize = asksTotalSize + parseFloat(o.size);\n      return({price: o.price, size: asksTotalSize})\n    });\n\n    bids = bids.map((o,i) => {\n      bidsTotalSize = bidsTotalSize + parseFloat(o.size);\n      return({price: o.price, size: bidsTotalSize})\n    });\n\n    return (\n      <Row>\n        <Col xs=\"12\" md=\"12\" lg=\"12\">\n        <div className=\"StockOrderBookTitle\">\n          <h3>Orderbook</h3>\n        </div>\n        <div className=\"StockOrderBook\">\n          <table className=\"StockOrderBookBids\">\n            <thead>\n              <tr>\n                <th>Size</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            { bids.map((o, i) => {\n                return (<tr key={i} className=\"askRow\">\n                  <td>{Math.round(o.size * 100) / 100}</td>\n                  <td>{Math.round(o.price * 100) / 100}<div className=\"bg\" style={{width: (o.size/bidsTotalSize)*80 + \"%\"}}/></td>\n                </tr>)\n              })\n            }\n            </tbody>\n          </table>\n          <table className=\"StockOrderBookAsks\">\n            <thead>\n              <tr>\n                <th>Price</th>\n                <th>Size</th>\n              </tr>\n            </thead>\n            <tbody>\n            { asks.map((o, i) => {\n                return (<tr key={i} className=\"bidRow\">\n                  <td>{Math.round(o.price * 100) / 100}<div className=\"bg\" style={{width: (o.size/asksTotalSize)*80 + \"%\"}}/></td>\n                  <td>{Math.round(o.size * 100) / 100}</td>\n                </tr>)\n              })\n            }\n            </tbody>\n          </table>\n        </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from 'react';\nimport './StockInfo.css';\nimport { Row, Col } from 'reactstrap';\n\nexport class StockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.transactions = [];\n  }\n  // https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n  timeConverter(UNIX_timestamp){\n    const a = new Date(UNIX_timestamp);\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    const time = this.strPad(hour) + ':' + this.strPad(min) + ':' + this.strPad(sec) ;\n    return time;\n  }\n\n  strPad(n) {\n    return String(\"00\" + n).slice(-2);\n  }\n\n  render() {\n    this.transactions = this.props.trades\n    // Information\n\n\n    return (\n      <Row>\n        <Col xs=\"12\" md=\"12\" lg=\"6\">\n          <div className=\"StockData\">\n            <table>\n              <tbody>\n              <tr>\n                <th>Volume 24hs:</th>\n                <td>{this.props.info.volume}</td>\n              </tr>\n              <tr>\n                <th>High 24hs:</th>\n                <td>{this.props.info.high}</td>\n              </tr>\n              <tr>\n                <th>Low 24hs:</th>\n                <td>{this.props.info.low}</td>\n              </tr>\n              <tr>\n                <th>Last Price:</th>\n                <td>{this.props.info.last}</td>\n              </tr>\n              <tr>\n                <th>Variation 24hs:</th>\n                <td>{this.props.info.variation}%</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </Col>\n        <Col xs=\"12\" md=\"12\" lg=\"6\">\n        <div className=\"StockTradesData\">\n          {<table>\n            <thead>\n              <tr>\n                <th>Time</th>\n                <th>Amount</th>\n                <th>Price</th>\n              </tr>\n            </thead>\n            <tbody>\n            { this.transactions.map((o, i) => {\n                if (o.side === \"buy\") {\n                  return (\n                    <tr key={i} className=\"buyOrder\">\n                      <td>{this.timeConverter(o.time)}</td>\n                      <td>{o.amount}</td>\n                      <td>{parseInt(o.price)}</td>\n                    </tr>\n                  );\n                } else {\n                  return (\n                    <tr key={i} className=\"sellOrder\">\n                      <td>{this.timeConverter(o.time)}</td>\n                      <td>{o.amount}</td>\n                      <td>{parseInt(o.price)}</td>\n                    </tr>\n                  );\n                }\n              })\n            }\n            </tbody>\n\n          </table>\n        }</div>\n        </Col>\n      </Row>\n\n    );\n  }\n}\n","import React from 'react';\nimport './TradeChart.css';\nimport { createChart } from 'lightweight-charts';\n\n\nexport class TradeChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n    this.lineSeries = null;\n\n    this.chartTooltip = React.createRef();\n  }\n\n  shouldComponentUpdate(next_props) {\n    this.lineSeries.setData(next_props.data);\n    return false;\n  }\n\n  componentDidMount() {\n\n    // Generate chart\n    this.chart = createChart(document.getElementById(\"TradeChart\"),\n                              { width: 600,\n                                height: 350,\n                                fixLeftEdge: true,\n                                crosshair: {\n                                  labelVisible: false,\n                                  visible: false,\n                                },\n                                localization: {\n                                  locale: 'es-CL',\n                                  dateFormat: 'dd/mm/yyyy',\n                                  timeFormatter: function(timestamp) {\n                                    const a = new Date(timestamp*1000);\n                                    const hour = a.getHours();\n                                    const min = a.getMinutes();\n                                    const sec = a.getSeconds();\n                                    const time = String(\"00\" + hour).slice(-2) + ':' + String(\"00\" + min).slice(-2) + ':' + String(\"00\" + sec).slice(-2) ;\n                                    return time;\n                                  },\n                                },\n                              \tpriceScale: {\n                              \t\tscaleMargins: {\n                              \t\t\ttop: 0.3,\n                              \t\t\tbottom: 0.25,\n                              \t\t},\n                              \t\tborderVisible: false,\n                              \t},\n                              \tlayout: {\n                              \t\tbackgroundColor: '#131722',\n                              \t\ttextColor: '#d1d4dc',\n                              \t},\n                              \tgrid: {\n                              \t\tvertLines: {\n                              \t\t\tcolor: 'rgba(42, 46, 57, 0)',\n                              \t\t},\n                              \t\thorzLines: {\n                              \t\t\tcolor: 'rgba(42, 46, 57, 0.6)',\n                              \t\t},\n                              \t},\n                                timeScale: {\n                                  timeVisible: true,\n                                  visible: false,\n                                },\n    });\n    // Initialize empty line series\n    //this.lineSeries = this.chart.addLineSeries([]);\n    // this.lineSeries = this.chart.addAreaSeries({\n    // \ttopColor: 'rgba(38,198,218, 0.56)',\n    // \tbottomColor: 'rgba(38,198,218, 0.04)',\n    // \tlineColor: 'rgba(38,198,218, 1)',\n    // \tlineWidth: 2,\n    // });\n    this.lineSeries = this.chart.addCandlestickSeries();\n    this.chart.timeScale().applyOptions({ fixLeftEdge: true,\n                                          crosshair: {\n                                            labelVisible: false,\n                                            visible: false,\n                                          },\n                                          timeScale: {\n                                            timeVisible: true,\n                                            visible: false\n                                          },\n                                        });\n\n    window.addEventListener('resize', (event) => {\n      this.chart.resize(document.getElementById(\"TradeChart\").clientWidth, 350);\n    });\n\n    this.chart.resize(document.getElementById(\"TradeChart\").clientWidth, 350);\n\n    const toolTipWidth = 120;\n    const toolTipHeight = 100;\n    const toolTipMargin = 15;\n    const width = 600;\n    const height = 300;\n\n    let tooltip = document.getElementById(\"TradeChartTooltip\");\n    // update tooltip\n    this.chart.subscribeCrosshairMove((param) => {\n    \tif (!param.time || param.point.x < 0 || param.point.x > width || param.point.y < 0 || param.point.y > height) {\n    \t\ttooltip.style.display = 'none';\n    \t\treturn;\n    \t}\n\n    \tvar dateStr = this.datetimeConverter(param.time*1000);\n\n    \ttooltip.style.display = 'block';\n    \tvar candle = param.seriesPrices.get(this.lineSeries);\n\n    \t//tooltip.innerHTML = '<div style=\"color: rgba(255, 70, 70, 1)\">Apple Inc.</div>' +\n    \t//\t'<div style=\"font-size: 24px; margin: 4px 0px\">' + Math.round(price * 100) / 100 + '</div>' +\n    \t//\t'<div>' + dateStr + '</div>';\n\n    \ttooltip.innerHTML = '<div style=\"font-size: 8px; margin: 4px 0px\"> o: '+Math.round(candle.open)+' - h: '+Math.round(candle.high)+' - l: '+Math.round(candle.low)+' - c: '+Math.round(candle.close)+'</div>' +\n    \t\t'<div>' + dateStr + '</div>';\n\n    \tvar y = param.point.y;\n\n    \tvar left = param.point.x + toolTipMargin;\n    \tif (left > width - toolTipWidth) {\n    \t\tleft = param.point.x - toolTipMargin - toolTipWidth;\n    \t}\n\n    \tvar top = y + toolTipMargin;\n    \tif (top > height - toolTipHeight) {\n    \t\ttop = y - toolTipHeight - toolTipMargin;\n    \t}\n\n    \ttooltip.style.left = left + 'px';\n    \ttooltip.style.top = top + 'px';\n    });\n  }\n\n  // https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\n  datetimeConverter(UNIX_timestamp){\n    const a = new Date(UNIX_timestamp);\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    const year = a.getFullYear();\n    const month = months[a.getMonth()];\n    const date = a.getDate();\n    const hour = a.getHours();\n    const min = a.getMinutes();\n    const sec = a.getSeconds();\n    const datetime = date + ' ' + month + ' ' + year + ' ' + this.strPad(hour) + ':' + this.strPad(min) + ':' + this.strPad(sec) ;\n    return datetime;\n  }\n\n  strPad(n) {\n    return String(\"00\" + n).slice(-2);\n  }\n\n  render() {\n    return (\n      <div id=\"TradeChart\">\n        <div ref={this.chartTooltip} id=\"TradeChartTooltip\" className=\"floating-tooltip-2\"></div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n// Components\nimport { StockOrderBook }  from './StockOrderBook';\nimport { StockInfo } from './StockInfo';\nimport { TradeChart } from './TradeChart';\n\nconst ccxws = require(\"ccxws\");\n\nexport class Stock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state =  { orderbookAsks: [],\n                    orderbookBids: [],\n                    info : {\n                      volume: 0,\n                      high: 0,\n                      low: 0,\n                      lastPrice: 0,\n                      variation: 0,\n                      price: 0,\n                      side: 0,\n                      time: 0,\n                      amount: ''\n                    },\n                    trades: [],\n                    candles: []\n                  };\n  }\n\n  componentDidMount() {\n    this.startGettingData(this.props.market);\n  }\n\n  startGettingData(market) {\n    // Get previous chart data\n    fetch(\"https://api.binance.com/api/v3/klines?symbol=\"+market.id+\"&interval=1h\")\n        .then(res => res.json())\n        .then((data) => {\n          const candles = data.map((o,i) => { return({  time: o[0],\n                                                        open: o[1],\n                                                        high: o[2],\n                                                        low: o[3],\n                                                        close: o[4]\n                                                     }); });\n          this.setState({ candles: candles });\n          // Connect to websocket and retrieve last data\n          this.connectSocket(market);\n        })\n        .catch(console.log)\n  }\n\n  changeStock(newMarket) {\n    this.disconnectSockets();\n    this.startGettingData(newMarket);\n  }\n\n  disconnectSockets() {\n    this.klineStream.close();\n    this.tradeStream.close();\n    this.infoStream.close();\n  }\n\n  connectSocket(market) {\n    this.klineStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+market.id.toLowerCase()+\"@kline_1h\");\n    this.tradeStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+market.id.toLowerCase()+\"@aggTrade\");\n    this.infoStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+market.id.toLowerCase()+\"@ticker\");\n\n    //this.orderBookStream = new WebSocket(\"wss://stream.binance.com:9443/ws/\"+market.id.toLowerCase()+\"@bookTicker\");\n    this.socket2 =  new ccxws.binance();\n    this.socket2.on(\"l2snapshot\", snapshot => {\n      this.setState({ orderbookAsks: snapshot.asks,\n                      orderbookBids: snapshot.bids})\n    });\n    // subscribe to level2 orderbook snapshots\n    this.socket2.subscribeLevel2Snapshots(market);\n\n\n    this.klineStream.onmessage = (evt) =>  {\n      const data = JSON.parse(evt.data);\n\n      const candle = {  time: data.k.t,\n                        open: data.k.o,\n                        high: data.k.h,\n                        low: data.k.l,\n                        close: data.k.c\n                     }\n       if (this.state.candles.length > 0 && this.state.candles[this.state.candles.length-1].time === candle.time){\n         this.setState({ candles: [...this.state.candles.slice(0, -1), candle] });\n       }  else {\n         this.setState({ candles: [...this.state.candles, candle] });\n       }\n    };\n\n    this.tradeStream.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n\n      const trade =  {  time: data.E,\n                        amount: data.q,\n                        price: data.p,\n                        side: data.m ? \"buy\" : \"sell\"\n                     }\n\n      this.setState({ trades: [trade, ...this.state.trades.slice(0,20)] });\n    };\n\n    this.infoStream.onmessage = (evt) => {\n      const data = JSON.parse(evt.data);\n\n      this.setState({ info: {\n                              volume: Math.round(data.v*100)/100,\n                              variation: Math.round((data.c - data.o)/data.o*10000)/100,\n                              high: Math.round(data.h*100)/100,\n                              low: Math.round(data.l*100)/100,\n                              last: Math.round(data.c*100)/100\n                            } });\n    };\n\n\n\n  }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.market.id !== this.props.market.id) {\n      this.changeStock(nextProps.market);\n      return true;\n    }\n\n    if (nextState) return true;\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"Stock\">\n        <TradeChart data={this.state.candles}/>\n        <StockInfo   info = {this.state.info}\n                     trades = {this.state.trades}\n                     />\n        <StockOrderBook asks={this.state.orderbookAsks} bids={this.state.orderbookBids} />\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './StockList.css';\n\nexport class StockList extends React.Component {\n  render() {\n    return (\n      <div className=\"StockList\">\n        <ul>\n        { this.props.markets.map((o, i) =>\n            <li key={i}\n                onClick={this.props.clickAction}\n                stockId={o.id} >\n              {o.id}\n            </li>\n          )\n        }\n        </ul>\n      </div>\n    );\n  }\n}\n","export default\n{\n  BTCUSDT: {\n    id: \"BTCUSDT\",\n    base: \"BTC\",\n    quote: \"USDT\",\n  },\n  ETHUSDT: {\n    id: \"ETHUSDT\",\n    base: \"ETH\",\n    quote: \"USDT\",\n  },\n  BNBUSDT: {\n    id: \"BNBUSDT\",\n    base: \"BNB\",\n    quote: \"USDT\",\n  },\n  ADAUSDT: {\n    id: \"ADAUSDT\",\n    base: \"ADA\",\n    quote: \"USDT\",\n  },\n  BUSDUSDT: {\n    id: \"BUSDUSDT\",\n    base: \"BUSD\",\n    quote: \"USDT\",\n  },\n  XRPUSDT: {\n    id: \"XRPUSDT\",\n    base: \"XRP\",\n    quote: \"USDT\",\n  },\n  BCHUSDT: {\n    id: \"BCHUSDT\",\n    base: \"BCH\",\n    quote: \"USDT\",\n  },\n  ETCUSDT: {\n    id: \"ETCUSDT\",\n    base: \"ETC\",\n    quote: \"USDT\",\n  },\n  EOSUSDT: {\n    id: \"EOSUSDT\",\n    base: \"EOS\",\n    quote: \"USDT\",\n  },\n  LTCUSDT: {\n    id: \"LTCUSDT\",\n    base: \"XRP\",\n    quote: \"USDT\",\n  },\n  DASHUSDT: {\n    id: \"DASHUSDT\",\n    base: \"DASH\",\n    quote: \"USDT\",\n  },\n  XMRUSDT: {\n    id: \"XMRUSDT\",\n    base: \"XMR\",\n    quote: \"USDT\",\n  }\n}\n","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n// Components\nimport { Container, Row, Col } from 'reactstrap';\nimport { Stock }  from './components/Stock';\nimport { StockList }  from './components/StockList';\n//import Switch from 'react-switch';\n//import ClipLoader from \"react-spinners/ClipLoader\";\n\n// Utils\nimport markets from './data/markets';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  { stockShowing: \"\"\n                  };\n  }\n\n  onStockClick(event) {\n    // Change chart and current stock info\n    console.log(event.target.getAttribute(\"stockId\"));\n    const stock_id = event.target.getAttribute(\"stockId\");\n    this.updateStock(stock_id);\n  }\n\n  updateStock(stock_id) {\n    this.setState({ stockShowing: stock_id })\n  }\n\n  render() {\n\n    const marketsList = Object.values(markets);\n    return (\n      <div className=\"App\">\n          <Container>\n            <Row>\n              <Col xs=\"12\" md=\"12\" lg=\"3\">\n                <StockList markets={marketsList}\n                           clickAction={this.onStockClick.bind(this)} />\n              </Col>\n              <Col xs=\"12\" md=\"12\" lg=\"9\">\n                { (this.state.stockShowing) ?\n                <Stock market={markets[this.state.stockShowing]}/>\n              :\n                <h4 style={{width:\"100%\"}}>Select a stock...</h4>\n              }\n              </Col>\n            </Row>\n\n          </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}